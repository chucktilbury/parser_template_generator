{{file_header}}
#ifndef _TOKENS_H_
#define _TOKENS_H_

#include <stdbool.h>
#include "common.h"

typedef enum {
    TOK_END_OF_FILE = 256,
    TOK_END_OF_INPUT = 257,
    TOK_ERROR = 258,
{{token_type_list}}
} token_type_t;

typedef struct _token_t_ {
    token_type_t type;
    string_t* str;
    const char* fname;
    int line_no;
    int col_no;
    struct _token_t_* next;
} token_t;

token_t* create_token(string_t* str, token_type_t type);
void destroy_token(token_t* tok);
const char* tok_type_to_str(token_t* tok);

void init_token_queue(void);
void destroy_token_queue(void);
void add_token_queue(token_t* tok);
void* mark_token_queue(void);
void restore_token_queue(void* mark);
void consume_token_queue(void);

token_t* get_token(void);
bool expect_token(token_type_t type);
token_t* consume_token(void);

#endif /* _TOKENS_H_ */
